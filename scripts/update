#!/usr/bin/env bash

# Purpose:
#

# Bash colour variables
COLOUR_GREEN="\x1b[32;01m"
COLOUR_RED="\x1b[31;01m"
COLOUR_RESET="\x1b[39;49;00m"

cd "$(dirname "$0")/.."

#
# Hydrates local instance of secrets manager with `secrets.json` file
#

SECRET_FILE="secrets.json"
if [ -f $SECRET_FILE ]; then
    echo -e "--> "$COLOUR_GREEN"Hydrating local AWS Secrets Manager"$COLOUR_RESET

    docker-compose run --rm --workdir="/usr/src/util" \
        python-cli \
        python local-secrets-loader.py < $SECRET_FILE

    echo ""
fi

#
# Creates DynamoDB tables
#
export $(grep LOCAL_AWS_ENDPOINT .lambda.env)
if [ -n "$LOCAL_AWS_ENDPOINT" ]; then
    echo -e "--> "$COLOUR_GREEN"Creating local AWS DynamoDB table"$COLOUR_RESET

    docker-compose exec awslocal awslocal dynamodb create-table \
        --table-name Interviews \
        --key-schema AttributeName=pk,KeyType=HASH AttributeName=sk,KeyType=RANGE \
        --attribute-definitions AttributeName=pk,AttributeType=S AttributeName=sk,AttributeType=S \
        --billing-mode PAY_PER_REQUEST \
        --output text

    echo ""
fi

#
# Creates EventBridge
#
export $(grep LOCAL_AWS_ENDPOINT .lambda.env)
if [ -n "$LOCAL_AWS_ENDPOINT" ]; then
    echo -e "--> "$COLOUR_GREEN"Creating local AWS EventBridge bus"$COLOUR_RESET

    docker-compose exec awslocal awslocal events create-event-bus \
        --name thiscovery-event-bus \
        --output text

    echo ""
fi
